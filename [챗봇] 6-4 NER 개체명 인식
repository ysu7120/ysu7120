{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMbpcXUaBwOABMzHGu96ua5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"AKCoqEb4Lutu","executionInfo":{"status":"ok","timestamp":1670309438120,"user_tz":-540,"elapsed":328,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import tensorflow as tf\n","from tensorflow.keras import preprocessing\n","from sklearn.model_selection import train_test_split\n","import numpy as np"]},{"cell_type":"code","source":["# 학습 파일 불러오기\n","def read_file(file_name):\n","    sents = []\n","    with open(file_name, 'r', encoding='utf-8') as f:\n","        lines = f.readlines()\n","        for idx, l in enumerate(lines):\n","            if l[0] == ';' and lines[idx + 1][0] == '$':\n","                this_sent = []\n","            elif l[0] == '$' and lines[idx - 1][0] == ';':\n","                continue\n","            elif l[0] == '\\n':\n","                sents.append(this_sent)\n","            else:\n","                this_sent.append(tuple(l.split()))\n","    return sents"],"metadata":{"id":"ZE9YtRAkMGBR","executionInfo":{"status":"ok","timestamp":1670309439664,"user_tz":-540,"elapsed":3,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# 학습용 말뭉치 데이터를 불러옴\n","corpus = read_file('/content/train.txt')\n","\n","# 말뭉치 데이터에서 단어와 BIO 태그만 불러와 학습용 데이터셋 생성\n","sentences, tags = [], []\n","for t in corpus:\n","    tagged_sentence = []\n","    sentence, bio_tag = [], []\n","    for w in t:\n","        tagged_sentence.append((w[1], w[3]))\n","        sentence.append(w[1])\n","        bio_tag.append(w[3])\n","\n","    sentences.append(sentence)\n","    tags.append(bio_tag)"],"metadata":{"id":"u3oLXqLuMIVI","executionInfo":{"status":"ok","timestamp":1670309441267,"user_tz":-540,"elapsed":410,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["print(\"샘플 크기 : \\n\", len(sentences))\n","print(\"0번째 샘플 문장 시퀀스 : \\n\", sentences[0])\n","print(\"0번째 샘플 bio 태그 : \\n\", tags[0])\n","print(\"샘플 문장 시퀀스 최대 길이 :\", max(len(l) for l in sentences))\n","print(\"샘플 문장 시퀀스 평균 길이 :\", (sum(map(len, sentences))/len(sentences)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oy8Gp3RfMKHV","executionInfo":{"status":"ok","timestamp":1670309443035,"user_tz":-540,"elapsed":4,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"681bded7-4039-491f-a769-14fc707a0209"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["샘플 크기 : \n"," 3555\n","0번째 샘플 문장 시퀀스 : \n"," ['한편', ',', 'AFC', '챔피언스', '리그', 'E', '조', '에', '속하', 'ㄴ', '포항', '역시', '대회', '8강', '진출', '이', '불투명', '하', '다', '.']\n","0번째 샘플 bio 태그 : \n"," ['O', 'O', 'O', 'O', 'O', 'B_OG', 'I', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O', 'O']\n","샘플 문장 시퀀스 최대 길이 : 168\n","샘플 문장 시퀀스 평균 길이 : 34.03909985935302\n"]}]},{"cell_type":"code","source":["# 토크나이저 정의\n","sent_tokenizer = preprocessing.text.Tokenizer(oov_token='OOV') # 첫 번째 인덱스에는 OOV 사용\n","sent_tokenizer.fit_on_texts(sentences)\n","tag_tokenizer = preprocessing.text.Tokenizer(lower=False) # 태그 정보는 lower= False 소문자로 변환하지 않는다.\n","tag_tokenizer.fit_on_texts(tags)"],"metadata":{"id":"3s7bO_mtMLUa","executionInfo":{"status":"ok","timestamp":1670309445027,"user_tz":-540,"elapsed":431,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# 단어 사전 및 태그 사전 크기\n","vocab_size = len(sent_tokenizer.word_index) + 1\n","tag_size = len(tag_tokenizer.word_index) + 1\n","print(\"BIO 태그 사전 크기 :\", tag_size)\n","print(\"단어 사전 크기 :\", vocab_size)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pSi2cGNRMMJl","executionInfo":{"status":"ok","timestamp":1670309446200,"user_tz":-540,"elapsed":4,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"60d2208f-62e6-47d0-fc46-caf77798a1ca"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["BIO 태그 사전 크기 : 8\n","단어 사전 크기 : 13834\n"]}]},{"cell_type":"code","source":["# 학습용 단어 시퀀스 생성\n","x_train = sent_tokenizer.texts_to_sequences(sentences)\n","y_train = tag_tokenizer.texts_to_sequences(tags)\n","print(x_train[0])\n","print(y_train[0])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nMLxG8pCMNWW","executionInfo":{"status":"ok","timestamp":1670309447721,"user_tz":-540,"elapsed":429,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"031a206f-4677-4e83-caf2-6274c38b74e4"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["[183, 11, 4276, 884, 162, 931, 402, 10, 2608, 7, 1516, 608, 145, 1361, 414, 4, 6347, 2, 8, 3]\n","[1, 1, 1, 1, 1, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n"]}]},{"cell_type":"code","source":["# index to word / index to NER 정의\n","index_to_word = sent_tokenizer.index_word # 시퀀스 인덱스를 단어로 변환하기 위해 사용\n","index_to_ner = tag_tokenizer.index_word # 시퀀스 인덱스를 NER로 변환하기 위해 사용\n","index_to_ner[0] = 'PAD'"],"metadata":{"id":"--SzHaaMMONK","executionInfo":{"status":"ok","timestamp":1670309449166,"user_tz":-540,"elapsed":2,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["# 시퀀스 패딩 처리\n","max_len = 40\n","x_train = preprocessing.sequence.pad_sequences(x_train, padding='post', maxlen=max_len)\n","y_train = preprocessing.sequence.pad_sequences(y_train, padding='post', maxlen=max_len)"],"metadata":{"id":"jOJirobpMPrK","executionInfo":{"status":"ok","timestamp":1670309450340,"user_tz":-540,"elapsed":2,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["# 학습 데이터와 테스트 데이터를 8:2 비율로 분리\n","x_train, x_test, y_train, y_test = train_test_split(x_train, y_train, test_size=.2, random_state=0)"],"metadata":{"id":"-N_8sVOQMQ6G","executionInfo":{"status":"ok","timestamp":1670309451707,"user_tz":-540,"elapsed":4,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# 출력 데이터를 원-핫 인코딩\n","y_train = tf.keras.utils.to_categorical(y_train, num_classes=tag_size)\n","y_test = tf.keras.utils.to_categorical(y_test, num_classes=tag_size)\n","\n","print(\"학습 샘플 시퀀스 형상 : \", x_train.shape)\n","print(\"학습 샘플 레이블 형상 : \", y_train.shape)\n","print(\"테스트 샘플 시퀀스 형상 : \", x_test.shape)\n","print(\"테스트 샘플 레이블 형상 : \", y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C9zUCIvmMR2F","executionInfo":{"status":"ok","timestamp":1670309452891,"user_tz":-540,"elapsed":4,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"470f461b-0ba1-4796-99c6-381b164da3b9"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["학습 샘플 시퀀스 형상 :  (2844, 40)\n","학습 샘플 레이블 형상 :  (2844, 40, 8)\n","테스트 샘플 시퀀스 형상 :  (711, 40)\n","테스트 샘플 레이블 형상 :  (711, 40, 8)\n"]}]},{"cell_type":"code","source":["# 모델 정의(Bi-LSTM)\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import LSTM, Embedding, Dense, TimeDistributed, Dropout, Bidirectional\n","from tensorflow.keras.optimizers import Adam\n","model = Sequential()\n","model.add(Embedding(input_dim=vocab_size, output_dim=30, input_length=max_len, mask_zero=True))\n","model.add(Bidirectional(LSTM(200, return_sequences=True, dropout=0.50, recurrent_dropout=0.25)))\n","model.add(TimeDistributed(Dense(tag_size, activation='softmax')))\n","model.compile(loss='categorical_crossentropy', optimizer=Adam(0.01), metrics=['accuracy'])\n","model.fit(x_train, y_train, batch_size=128, epochs=10)\n","print(\"평가 결과 : \", model.evaluate(x_test, y_test)[1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O9ZqcmPOMS4Z","executionInfo":{"status":"ok","timestamp":1670309665670,"user_tz":-540,"elapsed":211242,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"559ae06c-64ac-42dc-e299-5ecf30234d5c"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","23/23 [==============================] - 30s 869ms/step - loss: 0.4864 - accuracy: 0.8366\n","Epoch 2/10\n","23/23 [==============================] - 20s 861ms/step - loss: 0.2140 - accuracy: 0.9036\n","Epoch 3/10\n","23/23 [==============================] - 20s 879ms/step - loss: 0.1547 - accuracy: 0.9257\n","Epoch 4/10\n","23/23 [==============================] - 20s 872ms/step - loss: 0.1175 - accuracy: 0.9437\n","Epoch 5/10\n","23/23 [==============================] - 20s 854ms/step - loss: 0.0899 - accuracy: 0.9605\n","Epoch 6/10\n","23/23 [==============================] - 20s 855ms/step - loss: 0.0664 - accuracy: 0.9717\n","Epoch 7/10\n","23/23 [==============================] - 20s 855ms/step - loss: 0.0491 - accuracy: 0.9788\n","Epoch 8/10\n","23/23 [==============================] - 20s 851ms/step - loss: 0.0374 - accuracy: 0.9833\n","Epoch 9/10\n","23/23 [==============================] - 20s 855ms/step - loss: 0.0299 - accuracy: 0.9869\n","Epoch 10/10\n","23/23 [==============================] - 20s 860ms/step - loss: 0.0236 - accuracy: 0.9895\n","23/23 [==============================] - 2s 57ms/step - loss: 0.2003 - accuracy: 0.9387\n","평가 결과 :  0.9387347102165222\n"]}]},{"cell_type":"code","source":["# 시퀀스를 NER 태그로 변환\n","def sequences_to_tag(sequences):\n","    result = []\n","    for sequence in sequences:\n","        temp = []\n","        for pred in sequence:\n","            pred_index = np.argmax(pred)\n","            temp.append(index_to_ner[pred_index].replace(\"PAD\", \"O\"))\n","        result.append(temp)\n","    return result"],"metadata":{"id":"hkoV7zofMT_y","executionInfo":{"status":"ok","timestamp":1670313782251,"user_tz":-540,"elapsed":1036,"user":{"displayName":"유성운","userId":"04010736311021015655"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# 테스트 데이터셋의 NER 예측\n","y_predicted = model.predict(x_test) # (711, 40) => model => (711, 40, 8)\n","pred_tags = sequences_to_tag(y_predicted) # 예측된 NER\n","test_tags = sequences_to_tag(y_test) # 실제 NER"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4w0r4OPVMVFS","executionInfo":{"status":"ok","timestamp":1670313788870,"user_tz":-540,"elapsed":3229,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"846a1d58-c601-4eb4-ad60-6c7fbeafaae1"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["23/23 [==============================] - 2s 59ms/step\n"]}]},{"cell_type":"code","source":["! pip install seqeval"],"metadata":{"id":"7gNJimjLdy1I","executionInfo":{"status":"ok","timestamp":1670313899777,"user_tz":-540,"elapsed":11514,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"7d887c2f-2c17-4d52-8b2d-ba19ce98e851","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting seqeval\n","  Downloading seqeval-1.2.2.tar.gz (43 kB)\n","\u001b[K     |████████████████████████████████| 43 kB 1.2 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.8/dist-packages (from seqeval) (1.21.6)\n","Requirement already satisfied: scikit-learn>=0.21.3 in /usr/local/lib/python3.8/dist-packages (from seqeval) (1.0.2)\n","Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.8/dist-packages (from scikit-learn>=0.21.3->seqeval) (1.7.3)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.8/dist-packages (from scikit-learn>=0.21.3->seqeval) (1.2.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.8/dist-packages (from scikit-learn>=0.21.3->seqeval) (3.1.0)\n","Building wheels for collected packages: seqeval\n","  Building wheel for seqeval (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for seqeval: filename=seqeval-1.2.2-py3-none-any.whl size=16179 sha256=cfcf53671f5ef639c5367e1dcf99a3489ac06d065ce0ade480f1c39518d16581\n","  Stored in directory: /root/.cache/pip/wheels/ad/5c/ba/05fa33fa5855777b7d686e843ec07452f22a66a138e290e732\n","Successfully built seqeval\n","Installing collected packages: seqeval\n","Successfully installed seqeval-1.2.2\n"]}]},{"cell_type":"code","source":["# F1 스코어 계산을 위해 사용\n","from seqeval.metrics import f1_score, classification_report\n","print(classification_report(test_tags, pred_tags))\n","print(\"F1-score: {:.1%}\".format(f1_score(test_tags, pred_tags)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hN4ANGb3MWGZ","executionInfo":{"status":"ok","timestamp":1670313903120,"user_tz":-540,"elapsed":1646,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"36426091-e7a4-4d39-d13a-7e8b89da7b38"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/seqeval/metrics/sequence_labeling.py:171: UserWarning: B_DT seems not to be NE tag.\n","  warnings.warn('{} seems not to be NE tag.'.format(chunk))\n","/usr/local/lib/python3.8/dist-packages/seqeval/metrics/sequence_labeling.py:171: UserWarning: B_PS seems not to be NE tag.\n","  warnings.warn('{} seems not to be NE tag.'.format(chunk))\n","/usr/local/lib/python3.8/dist-packages/seqeval/metrics/sequence_labeling.py:171: UserWarning: B_OG seems not to be NE tag.\n","  warnings.warn('{} seems not to be NE tag.'.format(chunk))\n","/usr/local/lib/python3.8/dist-packages/seqeval/metrics/sequence_labeling.py:171: UserWarning: B_TI seems not to be NE tag.\n","  warnings.warn('{} seems not to be NE tag.'.format(chunk))\n","/usr/local/lib/python3.8/dist-packages/seqeval/metrics/sequence_labeling.py:171: UserWarning: B_LC seems not to be NE tag.\n","  warnings.warn('{} seems not to be NE tag.'.format(chunk))\n"]},{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           _       0.64      0.57      0.61       657\n","         _DT       0.94      0.88      0.91       335\n","         _LC       0.73      0.58      0.64       312\n","         _OG       0.76      0.51      0.61       481\n","         _PS       0.68      0.45      0.54       374\n","         _TI       0.87      0.80      0.83        66\n","\n","   micro avg       0.74      0.59      0.66      2225\n","   macro avg       0.77      0.63      0.69      2225\n","weighted avg       0.74      0.59      0.65      2225\n","\n","F1-score: 65.9%\n"]}]},{"cell_type":"code","source":["# 새로운 유형의 문장 NER 예측\n","word_to_index = sent_tokenizer.word_index\n","new_sentence = '삼성전자 출시 스마트폰 오늘 애플 도전장 내밀다.'.split()\n","new_x = []\n","for w in new_sentence:\n","    try:\n","        new_x.append(word_to_index.get(w, 1))\n","    except KeyError:\n","        # 모르는 단어의 경우 OOV\n","        new_x.append(word_to_index['OOV'])\n","\n","print(\"새로운 유형의 시퀀스 : \", new_x)\n","new_padded_seqs = preprocessing.sequence.pad_sequences([new_x], padding=\"post\", value=0, maxlen=max_len)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dc42-UilMZVB","executionInfo":{"status":"ok","timestamp":1670313806572,"user_tz":-540,"elapsed":420,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"f7a48a75-26f8-4f7c-ccc2-6c5c7c88431f"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["새로운 유형의 시퀀스 :  [531, 307, 1476, 286, 1507, 6766, 1]\n"]}]},{"cell_type":"code","source":["# NER 예측\n","p = model.predict(np.array([new_padded_seqs[0]]))\n","p = np.argmax(p, axis=-1) # 예측된 NER 인덱스값 추출\n","print(\"{:10} {:5}\".format(\"단어\", \"예측된 NER\"))\n","print(\"-\" * 50)\n","\n","for w, pred in zip(new_sentence, p[0]):\n","    print(\"{:10} {:5}\".format(w, index_to_ner[pred]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rOsQ79RsMbGb","executionInfo":{"status":"ok","timestamp":1670313808559,"user_tz":-540,"elapsed":418,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"b3b2e8f4-d85f-419c-f6f2-0f582d4bf421"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 61ms/step\n","단어         예측된 NER\n","--------------------------------------------------\n","삼성전자       B_OG \n","출시         O    \n","스마트폰       O    \n","오늘         B_DT \n","애플         B_OG \n","도전장        O    \n","내밀다.       O    \n"]}]}]}