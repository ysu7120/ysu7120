{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"연결리스트","provenance":[],"authorship_tag":"ABX9TyO+yNu0ZMlgrzA5zo/QWbJX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"okKWU98A87A1"},"outputs":[],"source":["class LinkedList: \n","  def __init__(self): \n","    self.head = None \n","  def add(self, data): \n","    new_node = Node(data) \n","    if not self.head: \n","      self.head = new_node \n","    else: \n","      node = self.head \n","    while node.next: \n","      node = node.next \n","        node.next = new_node\n","    def delete(self, data): \n","      node = self.head \n","      if node.data == data:\n","        self.head = node.next \n","        del node \n","      else:\n","        while node.next:\n","          next_node = node.next \n","          if next_node.data == data:\n","             node.next = next_node.next \n","             del next_node \n","          else: node = node.next \n","    def find(self, data):\n","       node = self.head \n","       while node:\n","          if node.data == data:\n","             return node \n","          else:\n","             node = node.next \n","    def print(self): \n","      node = self.head \n","      while node: \n","        print(node.data) \n","        node = node.next\n"]}]}