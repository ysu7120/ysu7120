{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOJ7793yqIgs3pSEXJCw4y1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["numData = [\n","        [ 5, 7, -5, 100, 73 ],\n","        [ 35, 23, 4, 190, 33 ],\n","        [ 49, 85, 662, 39, 81 ],\n","        [ 124, -59, 86, 46, 52 ],\n","        [ 27, 7, 8, 33, -56 ] \n","    ]\n","print(numData[3][0]%100)\n","ARRAY_LENGTH = 5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K-D0M0ZuX_Y-","executionInfo":{"status":"ok","timestamp":1669121521151,"user_tz":-540,"elapsed":389,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"9744a2da-2082-4538-c6a5-216df4768a2e"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["24\n"]}]},{"cell_type":"code","source":["numData = [\n","        [ 5, 7, -5, 100, 73 ],\n","        [ 35, 23, 4, 190, 33 ],\n","        [ 49, 85, 662, 39, 81 ],\n","        [ 124, -59, 86, 46, 52 ],\n","        [ 27, 7, 8, 33, -56 ] \n","    ]\n","ARRAY_LENGTH = 5\n","retData = [] # 조건에 따라서 전처리된 2차원 배열\n","for i in range(ARRAY_LENGTH):\n","  for j in range(len(numData)):\n","    if numData[i][j] > 100:\n","      numData[i][j] = numData[i][j] % 100\n","    elif numData[i][j]<0:\n","      numData[i][j] = 0\n","  retData.append(numData[i])\n","print(retData)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pUz78l3Sf_WK","executionInfo":{"status":"ok","timestamp":1669121544201,"user_tz":-540,"elapsed":357,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"661dd630-fdd2-46b6-b854-c800ca5b0ac6"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["[[5, 7, 0, 100, 73], [35, 23, 4, 90, 33], [49, 85, 62, 39, 81], [24, 0, 86, 46, 52], [27, 7, 8, 33, 0]]\n"]}]},{"cell_type":"code","source":["print(sum(retData[3][4:6]))\n","print(sum(retData[4][4:6]))\n","print(sum(retData[3][4:6]+retData[4][4:6]))\n","print(len(numData))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8r7_FDZxZgmn","executionInfo":{"status":"ok","timestamp":1669122755765,"user_tz":-540,"elapsed":4,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"cf4925f7-f5d3-44e5-da02-1136e9851620"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["52\n","0\n","52\n","5\n"]}]},{"cell_type":"code","source":["score = 0\n","maxSum=0\n","for i in range(ARRAY_LENGTH):\n","  if i+1>(ARRAY_LENGTH-1):\n","    break  \n","  for j in range(len(numData)):\n","    if j==(len(numData)):\n","      break\n","    score = sum(retData[i][j:j+2]+retData[i+1][j:j+2])\n","    if maxSum < score:\n","      maxSum=score\n","print(maxSum)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bHHuCNYXbD9f","executionInfo":{"status":"ok","timestamp":1669122804763,"user_tz":-540,"elapsed":264,"user":{"displayName":"유성운","userId":"04010736311021015655"}},"outputId":"f77da3a7-2cee-4091-8d0b-d3d87b2681de"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["296\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qiPYhOBsuBEn"},"outputs":[],"source":["ARRAY_LENGTH = 5  # 배열의 행과 열 크기(고정)\n","\n","def replaceData(numData): # numData\t2차원 정수 배열\n","    retData = [] # 조건에 따라서 전처리된 2차원 배열\n","\n","    for i in range(ARRAY_LENGTH):\n","      for j in range(len(numData)):\n","        if numData[i][j] > 100:\n","          numData[i][j] = numData[i][j] % 100\n","        elif numData[i][j]<0:\n","          numData[i][j] = 0\n","      retData.append(numData[i])\n","    return retData\n","\n","\n","# 2x2 크기의 배열의 최대합을 구한다.\n","def getMaxSum(numData): # 요구 사항에 맞춰 처리된 2차원 정수 배열\n","    score = 0\n","    maxSum=0\n","    for i in range(ARRAY_LENGTH):\n","      if i+1>(ARRAY_LENGTH-1):\n","        break  \n","      for j in range(len(numData)):\n","        if j==(len(numData)):\n","          break\n","        score = sum(retData[i][j:j+2]+retData[i+1][j:j+2])\n","        if maxSum < score:\n","          maxSum=score\n","\n","    return maxSum\n","\n","## 전역 변수 선언 부분\n","numData =[] # 5x5 배열\n","ARRAY_LENGTH = 5 # 배열의 행과 열 크기(고정)\n","\n","def main() :\n","        global numData\n","\n","        loadData() # 2차원 배열 읽어오기\n","\n","        ## 원본 출력\n","        print(' ----- 초기 배열 -----')\n","        printData()\n","\n","        # 1. 데이터 치환 작업\n","        numData = replaceData(numData)\n","        print(' ----- 치환 후 배열 -----')\n","        printData()\n","\n","        # 2. 최대 합 구하기.(2x2 크기)\n","        maxSum = getMaxSum(numData)\n","        print('최대 영역의 합: %d' % maxSum)\n","\n","       \n","## 함수 선언 부분\n","def  loadData() : # 데이터 불러오기\n","    global numData\n","\n","    ###########\n","    # 제공 데이터 세트 1 \n","    # 5x5 숫자 배열. \n","    ###########\n","    numData = \\\n","    [\n","        [ 5, 7, -5, 100, 73 ],\n","        [ 35, 23, 4, 190, 33 ],\n","        [ 49, 85, 662, 39, 81 ],\n","        [ 124, -59, 86, 46, 52 ],\n","        [ 27, 7, 8, 33, -56 ] \n","    ]\n","    \n","    \n","\n","def printData() :\n","        for i in range(0, ARRAY_LENGTH) :\n","                for k in range(0, ARRAY_LENGTH) :\n","                        try :\n","                                print(\"%5d\" % numData[i][k], end='')\n","                        except :\n","                                pass\n","                print()\n","        print('--------------------------------------')\n","\n","## 메인 함수 호출 ##\n","if __name__ == \"__main__\" :\n","    main()"]}]}